#include <stdio.h>

int sum_around_element(int r, int w, int k, int wiersze, int kolumny, int matrix[wiersze][kolumny]);

void printMatrix(int wiersze, int kolumny, int matrix[wiersze][kolumny]);

int main() {
    int n, r;
    scanf("%d %d", &n, &r);
    int F[n][n];
    int W[n][n];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &F[i][j]);
            W[i][j] = 0;
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            W[i][j] = sum_around_element(r, i, j, n, n, F);
        }
    }

    printMatrix(n, n, W);
    return 0;
}


void printMatrix(int wiersze, int kolumny, int matrix[wiersze][kolumny]) {
    int size = wiersze;
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

int sum_around_element(int r, int w, int k, int wiersze, int kolumny, int matrix[wiersze][kolumny]) {
    int sum_ = 0;
    int row = w - r;
    int col = k - r;
    int row_range = w + r;
    int col_range = k + r;
    while (row < 0) {
        row += 1;
    }
    while (col < 0) {
        col += 1;
    }
    for (int i = row; i < wiersze && i <= row_range; i++) {
        for (int j = col; j < wiersze && j <= col_range; j++) {
            sum_ += matrix[i][j];
        }
    }

    return sum_;
}
